angular.module("connectedCarSDK",["connectedCarSDK.tpls","connectedCarSDK.attAlert","connectedCarSDK.attBadge","connectedCarSDK.attButtons","connectedCarSDK.attCarousel","connectedCarSDK.attDrawer","connectedCarSDK.attDropdown","connectedCarSDK.attHeader","connectedCarSDK.attListView","connectedCarSDK.attLoader","connectedCarSDK.attMenu","connectedCarSDK.attModal","connectedCarSDK.attProgressBar","connectedCarSDK.attSlider","connectedCarSDK.attTab","connectedCarSDK.attTabset","connectedCarSDK.attToggleSwitch","connectedCarSDK.transition"]),angular.module("connectedCarSDK.transition",[]).factory("$transition",["$q","$timeout","$rootScope",function($q,$timeout,$rootScope){function findEndEventName(endEventNames){for(var name in endEventNames)if(void 0!==transElement.style[name])return endEventNames[name]}var $transition=function(element,trigger,options){options=options||{};var deferred=$q.defer(),endEventName=$transition[options.animation?"animationEndEventName":"transitionEndEventName"],transitionEndHandler=function(){$rootScope.$apply(function(){element.unbind(endEventName,transitionEndHandler),deferred.resolve(element)})};return endEventName&&element.bind(endEventName,transitionEndHandler),$timeout(function(){angular.isString(trigger)?element.addClass(trigger):angular.isFunction(trigger)?trigger(element):angular.isObject(trigger)&&element.css(trigger),endEventName||deferred.resolve(element)}),deferred.promise.cancel=function(){endEventName&&element.unbind(endEventName,transitionEndHandler),deferred.reject("Transition cancelled")},deferred.promise},transElement=document.createElement("trans"),transitionEndEventNames={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd",transition:"transitionend"},animationEndEventNames={WebkitTransition:"webkitAnimationEnd",MozTransition:"animationend",OTransition:"oAnimationEnd",transition:"animationend"};return $transition.transitionEndEventName=findEndEventName(transitionEndEventNames),$transition.animationEndEventName=findEndEventName(animationEndEventNames),$transition}]),angular.module("connectedCarSDK.attAlert",[]).directive("attAlert",["$timeout",function($timeout){return{restrict:"AE",templateUrl:"templates/attAlert.html",transclude:!0,replace:!0,scope:{type:"=",showIcon:"=",showConfirmationBtn:"=",buttonText:"=",onClick:"&",onClose:"&",autoCloseInterval:"=",title:"="},link:function(scope){var timeoutPromise;scope.autoCloseInterval&&parseInt(scope.autoCloseInterval)>0&&(timeoutPromise=$timeout(function(){scope.closeAlert=!0,scope.close()},scope.autoCloseInterval)),scope.close=function(){1!=scope.showConfirmationBtn&&(timeoutPromise&&$timeout.cancel(timeoutPromise),scope.closeAlert=!0,scope.onClose())}}}}]),angular.module("connectedCarSDK.attBadge",[]).directive("attBadge",function(){return{templateUrl:"templates/attBadge.html",restrict:"E",replace:!0,scope:{value:"@",badgeType:"@"},link:function(){}}}),angular.module("connectedCarSDK.attButtons",[]).constant("buttonConfig",{activeClass:"active",toggleEvent:"click"}).controller("ButtonsController",["buttonConfig",function(buttonConfig){this.activeClass=buttonConfig.activeClass||"active",this.toggleEvent=buttonConfig.toggleEvent||"click"}]).directive("attBtnRadio",function(){return{require:["attBtnRadio","ngModel"],controller:"ButtonsController",link:function(scope,element,attrs,ctrls){var buttonsCtrl=ctrls[0],ngModelCtrl=ctrls[1];ngModelCtrl.$render=function(){element.toggleClass(buttonsCtrl.activeClass,angular.equals(ngModelCtrl.$modelValue,scope.$eval(attrs.attBtnRadio)))},element.bind(buttonsCtrl.toggleEvent,function(){var isActive=element.hasClass(buttonsCtrl.activeClass);(!isActive||angular.isDefined(attrs.uncheckable))&&scope.$apply(function(){ngModelCtrl.$setViewValue(isActive?null:scope.$eval(attrs.attBtnRadio)),ngModelCtrl.$render()})})}}}).directive("attBtnCheckbox",function(){return{require:["attBtnCheckbox","ngModel"],controller:"ButtonsController",link:function(scope,element,attrs,ctrls){function getTrueValue(){return getCheckboxValue(attrs.attBtnCheckboxTrue,!0)}function getFalseValue(){return getCheckboxValue(attrs.attBtnCheckboxFalse,!1)}function getCheckboxValue(attributeValue,defaultValue){var val=scope.$eval(attributeValue);return angular.isDefined(val)?val:defaultValue}var buttonsCtrl=ctrls[0],ngModelCtrl=ctrls[1];ngModelCtrl.$render=function(){element.toggleClass(buttonsCtrl.activeClass,angular.equals(ngModelCtrl.$modelValue,getTrueValue()))},element.bind(buttonsCtrl.toggleEvent,function(){scope.$apply(function(){ngModelCtrl.$setViewValue(element.hasClass(buttonsCtrl.activeClass)?getFalseValue():getTrueValue()),ngModelCtrl.$render()})})}}}),angular.module("connectedCarSDK.attCarousel",["connectedCarSDK.transition"]).controller("CarouselController",["$scope","$timeout","$transition","$animate",function($scope,$timeout,$transition,$animate){function restartTimer(){resetTimer();var interval=+$scope.interval;!isNaN(interval)&&interval>=0&&(currentTimeout=$timeout(timerFn,interval))}function resetTimer(){currentTimeout&&($timeout.cancel(currentTimeout),currentTimeout=null)}function timerFn(){isPlaying?($scope.next(),restartTimer()):$scope.pause()}$animate.enabled(!1);var currentTimeout,isPlaying,self=this,slides=self.slides=$scope.slides=[],currentIndex=-1;self.currentSlide=null;var destroyed=!1;self.select=$scope.select=function(nextSlide,direction){function goNext(){if(!destroyed){if(self.currentSlide&&angular.isString(direction)&&!$scope.noTransition&&nextSlide.$element){nextSlide.$element.addClass(direction);{nextSlide.$element[0].offsetWidth}angular.forEach(slides,function(slide){angular.extend(slide,{direction:"",entering:!1,leaving:!1,active:!1})}),angular.extend(nextSlide,{direction:direction,active:!0,entering:!0}),angular.extend(self.currentSlide||{},{direction:direction,leaving:!0}),$scope.$currentTransition=$transition(nextSlide.$element,{}),function(next,current){$scope.$currentTransition.then(function(){transitionDone(next,current)},function(){transitionDone(next,current)})}(nextSlide,self.currentSlide)}else transitionDone(nextSlide,self.currentSlide);self.currentSlide=nextSlide,currentIndex=nextIndex,restartTimer()}}function transitionDone(next,current){angular.extend(next,{direction:"",active:!0,leaving:!1,entering:!1}),angular.extend(current||{},{direction:"",active:!1,leaving:!1,entering:!1}),$scope.$currentTransition=null}var nextIndex=slides.indexOf(nextSlide);void 0===direction&&(direction=nextIndex>currentIndex?"next":"prev"),nextSlide&&nextSlide!==self.currentSlide&&($scope.$currentTransition?($scope.$currentTransition.cancel(),$timeout(goNext)):goNext())},$scope.$on("$destroy",function(){destroyed=!0}),self.indexOfSlide=function(slide){return slides.indexOf(slide)},$scope.next=function(){var newIndex=(currentIndex+1)%slides.length;return $scope.$currentTransition?void 0:self.select(slides[newIndex],"next")},$scope.prev=function(){var newIndex=0>currentIndex-1?slides.length-1:currentIndex-1;return $scope.$currentTransition?void 0:self.select(slides[newIndex],"prev")},$scope.isActive=function(slide){return self.currentSlide===slide},$scope.$watch("interval",restartTimer),$scope.$on("$destroy",resetTimer),$scope.play=function(){isPlaying||(isPlaying=!0,restartTimer())},$scope.pause=function(){$scope.noPause||(isPlaying=!1,resetTimer())},self.addSlide=function(slide,element){slide.$element=element,slides.push(slide),1===slides.length||slide.active?(self.select(slides[slides.length-1]),1==slides.length&&$scope.play()):slide.active=!1},self.removeSlide=function(slide){var index=slides.indexOf(slide);slides.splice(index,1),slides.length>0&&slide.active?self.select(index>=slides.length?slides[index-1]:slides[index]):currentIndex>index&&currentIndex--}}]).directive("attCarousel",[function(){return{restrict:"EA",transclude:!0,replace:!0,controller:"CarouselController",require:"carousel",templateUrl:"templates/carousel/carousel.html",scope:{interval:"=",noTransition:"=",noPause:"="}}}]).directive("attSlide",function(){return{require:"^attCarousel",restrict:"EA",transclude:!0,replace:!0,templateUrl:"templates/carousel/slide.html",scope:{active:"=?"},link:function(scope,element,attrs,carouselCtrl){carouselCtrl.addSlide(scope,element),scope.$on("$destroy",function(){carouselCtrl.removeSlide(scope)}),scope.$watch("active",function(active){active&&carouselCtrl.select(scope)})}}}),angular.module("connectedCarSDK.attDrawer",[]).directive("attDrawer",["$rootScope",function($rootScope){return{restrict:"E",templateUrl:"templates/attDrawer.html",transclude:!0,scope:{},link:function(scope){scope.showDrawer=!1,scope.closeDrawer=function(){scope.showDrawer=!1},$rootScope.$on("changeDrawer",function(event,args){scope.showDrawer=args[0]})}}}]),angular.module("connectedCarSDK.attDropdown",[]).directive("attDropdown",["$timeout",function($timeout){return{restrict:"E",replace:!0,templateUrl:"templates/attDropdown.html",require:"^ngModel",scope:{ngModel:"=",defaultOption:"@",items:"=",closeButton:"@"},link:function(scope){scope.show=!1,null!=scope.ngModel&&void 0!=scope.ngModel&&$timeout(function(){scope.defaultOption=scope.ngModel.text}),scope.selectItem=function(item){scope.ngModel=item,scope.defaultOption=scope.ngModel.text,scope.show=!1}}}}]),angular.module("connectedCarSDK.attHeader",[]).directive("attHeader",["$rootScope",function($rootScope){return{restrict:"E",templateUrl:"templates/attHeader.html",replace:!0,scope:{appName:"=",currentItem:"=",appImage:"@"},link:function(scope){scope.openMenu=function(){$rootScope.$broadcast("changeDrawer",[!0])}}}}]),angular.module("connectedCarSDK.attListView",[]).directive("attListView",function(){return{restrict:"E",templateUrl:"templates/attListView.html",replace:!0,scope:{items:"=",title:"=",multiSelect:"="},link:function(scope){scope.onItemClick=function(item){console.log("Selected item ",item),item.selected?item.selected=!1:scope.items&&scope.items.forEach(function(i){i==item?i.selected=!0:1!=scope.multiSelect&&(i.selected=!1)})}}}}),angular.module("connectedCarSDK.attLoader",[]).directive("attLoader",["$http",function($http){return{restrict:"E",replace:!0,templateUrl:"templates/attLoader.html",link:function(scope,element){scope.isLoading=function(){return $http.pendingRequests.length>0},scope.$watch(scope.isLoading,function(v){v?element.css("display","block"):element.css("display","none")})}}}]),angular.module("connectedCarSDK.attMenu",[]).directive("attMenu",function(){return{templateUrl:"templates/attMenu.html",restrict:"E",replace:!0,scope:{items:"=",title:"="},link:function(scope){scope.onItemClick=function(item){scope.items&&scope.items.forEach(function(i){i.selected=i==item?!0:!1})}}}}),angular.module("connectedCarSDK.attModal",["connectedCarSDK.transition"]).factory("$$stackedMap",function(){return{createNew:function(){var stack=[];return{add:function(key,value){stack.push({key:key,value:value})},get:function(key){for(var i=0;i<stack.length;i++)if(key==stack[i].key)return stack[i]},keys:function(){for(var keys=[],i=0;i<stack.length;i++)keys.push(stack[i].key);return keys},top:function(){return stack[stack.length-1]},remove:function(key){for(var idx=-1,i=0;i<stack.length;i++)if(key==stack[i].key){idx=i;break}return stack.splice(idx,1)[0]},removeTop:function(){return stack.splice(stack.length-1,1)[0]},length:function(){return stack.length}}}}}).directive("modalBackdrop",["$timeout",function($timeout){return{restrict:"EA",replace:!0,templateUrl:"templates/modal/backdrop.html",link:function(scope,element,attrs){scope.backdropClass=attrs.backdropClass||"",scope.animate=!1,$timeout(function(){scope.animate=!0})}}}]).directive("modalWindow",["$modalStack","$timeout",function($modalStack,$timeout){return{restrict:"EA",scope:{index:"@",animate:"="},replace:!0,transclude:!0,templateUrl:function(tElement,tAttrs){return tAttrs.templateUrl||"templates/modal/window.html"},link:function(scope,element,attrs){element.addClass(attrs.windowClass||""),scope.size=attrs.size,$timeout(function(){scope.animate=!0,element[0].querySelectorAll("[autofocus]").length||element[0].focus()}),scope.close=function(evt){var modal=$modalStack.getTop();modal&&modal.value.backdrop&&"static"!=modal.value.backdrop&&evt.target===evt.currentTarget&&(evt.preventDefault(),evt.stopPropagation(),$modalStack.dismiss(modal.key,"backdrop click"))}}}}]).directive("modalTransclude",function(){return{link:function($scope,$element,$attrs,controller,$transclude){$transclude($scope.$parent,function(clone){$element.empty(),$element.append(clone)})}}}).factory("$modalStack",["$transition","$timeout","$document","$compile","$rootScope","$$stackedMap",function($transition,$timeout,$document,$compile,$rootScope,$$stackedMap){function backdropIndex(){for(var topBackdropIndex=-1,opened=openedWindows.keys(),i=0;i<opened.length;i++)openedWindows.get(opened[i]).value.backdrop&&(topBackdropIndex=i);return topBackdropIndex}function removeModalWindow(modalInstance){var body=$document.find("body").eq(0),modalWindow=openedWindows.get(modalInstance).value;openedWindows.remove(modalInstance),removeAfterAnimate(modalWindow.modalDomEl,modalWindow.modalScope,300,function(){modalWindow.modalScope.$destroy(),body.toggleClass(OPENED_MODAL_CLASS,openedWindows.length()>0),checkRemoveBackdrop()})}function checkRemoveBackdrop(){if(backdropDomEl&&-1==backdropIndex()){var backdropScopeRef=backdropScope;removeAfterAnimate(backdropDomEl,backdropScope,150,function(){backdropScopeRef.$destroy(),backdropScopeRef=null}),backdropDomEl=void 0,backdropScope=void 0}}function removeAfterAnimate(domEl,scope,emulateTime,done){function afterAnimating(){afterAnimating.done||(afterAnimating.done=!0,domEl.remove(),done&&done())}scope.animate=!1;var transitionEndEventName=$transition.transitionEndEventName;if(transitionEndEventName){var timeout=$timeout(afterAnimating,emulateTime);domEl.bind(transitionEndEventName,function(){$timeout.cancel(timeout),afterAnimating(),scope.$apply()})}else $timeout(afterAnimating)}var backdropDomEl,backdropScope,OPENED_MODAL_CLASS="modal-open",openedWindows=$$stackedMap.createNew(),$modalStack={};return $rootScope.$watch(backdropIndex,function(newBackdropIndex){backdropScope&&(backdropScope.index=newBackdropIndex)}),$document.bind("keydown",function(evt){var modal;27===evt.which&&(modal=openedWindows.top(),modal&&modal.value.keyboard&&(evt.preventDefault(),$rootScope.$apply(function(){$modalStack.dismiss(modal.key,"escape key press")})))}),$modalStack.open=function(modalInstance,modal){openedWindows.add(modalInstance,{deferred:modal.deferred,modalScope:modal.scope,backdrop:modal.backdrop,keyboard:modal.keyboard});var body=$document.find("body").eq(0),currBackdropIndex=backdropIndex();if(currBackdropIndex>=0&&!backdropDomEl){backdropScope=$rootScope.$new(!0),backdropScope.index=currBackdropIndex;var angularBackgroundDomEl=angular.element("<div modal-backdrop></div>");angularBackgroundDomEl.attr("backdrop-class",modal.backdropClass),backdropDomEl=$compile(angularBackgroundDomEl)(backdropScope),body.append(backdropDomEl)}var angularDomEl=angular.element("<div modal-window></div>");angularDomEl.attr({"template-url":modal.windowTemplateUrl,"window-class":modal.windowClass,size:modal.size,index:openedWindows.length()-1,animate:"animate"}).html(modal.content);var modalDomEl=$compile(angularDomEl)(modal.scope);openedWindows.top().value.modalDomEl=modalDomEl,body.append(modalDomEl),body.addClass(OPENED_MODAL_CLASS)},$modalStack.close=function(modalInstance,result){var modalWindow=openedWindows.get(modalInstance);modalWindow&&(modalWindow.value.deferred.resolve(result),removeModalWindow(modalInstance))},$modalStack.dismiss=function(modalInstance,reason){var modalWindow=openedWindows.get(modalInstance);modalWindow&&(modalWindow.value.deferred.reject(reason),removeModalWindow(modalInstance))},$modalStack.dismissAll=function(reason){for(var topModal=this.getTop();topModal;)this.dismiss(topModal.key,reason),topModal=this.getTop()},$modalStack.getTop=function(){return openedWindows.top()},$modalStack}]).provider("$modal",function(){var $modalProvider={options:{backdrop:!1,keyboard:!0},$get:["$injector","$rootScope","$q","$http","$templateCache","$controller","$modalStack",function($injector,$rootScope,$q,$http,$templateCache,$controller,$modalStack){function getTemplatePromise(options){return options.template?$q.when(options.template):$http.get(angular.isFunction(options.templateUrl)?options.templateUrl():options.templateUrl,{cache:$templateCache}).then(function(result){return result.data})}function getResolvePromises(resolves){var promisesArr=[];return angular.forEach(resolves,function(value){(angular.isFunction(value)||angular.isArray(value))&&promisesArr.push($q.when($injector.invoke(value)))}),promisesArr}var $modal={};return $modal.open=function(modalOptions){var modalResultDeferred=$q.defer(),modalOpenedDeferred=$q.defer(),modalInstance={result:modalResultDeferred.promise,opened:modalOpenedDeferred.promise,close:function(result){$modalStack.close(modalInstance,result)},dismiss:function(reason){$modalStack.dismiss(modalInstance,reason)}};if(modalOptions=angular.extend({},$modalProvider.options,modalOptions),modalOptions.resolve=modalOptions.resolve||{},!modalOptions.template&&!modalOptions.templateUrl)throw new Error("One of template or templateUrl options is required.");var templateAndResolvePromise=$q.all([getTemplatePromise(modalOptions)].concat(getResolvePromises(modalOptions.resolve)));return templateAndResolvePromise.then(function(tplAndVars){var modalScope=(modalOptions.scope||$rootScope).$new();modalScope.$close=modalInstance.close,modalScope.$dismiss=modalInstance.dismiss;var ctrlInstance,ctrlLocals={},resolveIter=1;modalOptions.controller&&(ctrlLocals.$scope=modalScope,ctrlLocals.$modalInstance=modalInstance,angular.forEach(modalOptions.resolve,function(value,key){ctrlLocals[key]=tplAndVars[resolveIter++]}),ctrlInstance=$controller(modalOptions.controller,ctrlLocals),modalOptions.controllerAs&&(modalScope[modalOptions.controllerAs]=ctrlInstance)),$modalStack.open(modalInstance,{scope:modalScope,deferred:modalResultDeferred,content:tplAndVars[0],backdrop:modalOptions.backdrop,keyboard:modalOptions.keyboard,backdropClass:modalOptions.backdropClass,windowClass:modalOptions.windowClass,windowTemplateUrl:modalOptions.windowTemplateUrl,size:modalOptions.size})},function(reason){modalResultDeferred.reject(reason)}),templateAndResolvePromise.then(function(){modalOpenedDeferred.resolve(!0)},function(){modalOpenedDeferred.reject(!1)}),modalInstance},$modal}]};return $modalProvider}),angular.module("connectedCarSDK.attProgressBar",[]).constant("progressConfig",{animate:!0,max:100,min:0}).controller("ProgressController",["$scope","$attrs","progressConfig",function($scope,$attrs,progressConfig){var self=this,animate=angular.isDefined($attrs.animate)?$scope.$parent.$eval($attrs.animate):progressConfig.animate;this.bars=[],$scope.max=angular.isDefined($attrs.max)?$scope.$parent.$eval($attrs.max):progressConfig.max,$scope.min=angular.isDefined($attrs.min)?$scope.$parent.$eval($attrs.min):progressConfig.min,$scope.textLeft=angular.isDefined($attrs.textLeft)?$scope.$parent.$eval($attrs.textLeft):progressConfig.textLeft,$scope.textRight=angular.isDefined($attrs.textRight)?$scope.$parent.$eval($attrs.textRight):progressConfig.textRight,this.addBar=function(bar,element){animate||element.css({transition:"none"}),this.bars.push(bar),bar.$watch("value",function(value){bar.percent=+(100*value/$scope.max).toFixed(2)}),bar.$on("$destroy",function(){element=null,self.removeBar(bar)})},this.removeBar=function(bar){this.bars.splice(this.bars.indexOf(bar),1)}}]).directive("attProgressBar",function(){return{restrict:"EA",replace:!0,controller:"ProgressController",scope:{value:"=",type:"@"},templateUrl:"templates/attProgressBar.html",link:function(scope,element,attrs,progressCtrl){progressCtrl.addBar(scope,angular.element(element.children()[0]))}}}),angular.module("connectedCarSDK.attSlider",[]).directive("attSlider",function(){return{restrict:"EA",templateUrl:"templates/attSlider.html",scope:{type:"@",ngModel:"=",min:"@",max:"@",textLeft:"@",textRight:"@"},link:function(scope,element){scope.min=scope.min||0,scope.max=scope.max||100,scope.ngModel=scope.ngModel||0;var input=element.find("input");if(input&&input.length>0){var value=(scope.ngModel-scope.min)/(scope.max-scope.min);input[0].style.backgroundImage=["-webkit-gradient(","linear, ","left top, ","right top, ","color-stop("+value+", "+getComputedStyle(input[0]).backgroundColor+"), ","color-stop("+value+", #ffffff)",")"].join("")}scope.$watch(function(){return scope.ngModel},function(){if(input&&input.length>0){var gradStop=(scope.ngModel-scope.min)/(scope.max-scope.min);input[0].style.backgroundImage=["-webkit-gradient(","linear, ","left top, ","right top, ","color-stop("+gradStop+", "+getComputedStyle(input[0]).backgroundColor+"), ","color-stop("+gradStop+", #ffffff)",")"].join("")}})}}}),angular.module("connectedCarSDK.attTab",["connectedCarSDK.attTabset"]).directive("attTab",["$parse",function($parse){return{require:"^attTabset",restrict:"EA",replace:!0,templateUrl:"templates/tabs/attTab.html",transclude:!0,scope:{active:"=?",heading:"@",onSelect:"&select",onDeselect:"&deselect"},controller:function(){},compile:function(elm,attrs,transclude){return function(scope,elm,attrs,tabsetCtrl){scope.$watch("active",function(active){active&&tabsetCtrl.select(scope)}),scope.disabled=!1,attrs.disabled&&scope.$parent.$watch($parse(attrs.disabled),function(value){scope.disabled=!!value}),scope.select=function(){scope.disabled||(scope.active=!0)},tabsetCtrl.addTab(scope),scope.$on("$destroy",function(){tabsetCtrl.removeTab(scope)}),scope.$transcludeFn=transclude}}}}]).directive("tabHeadingTransclude",[function(){return{restrict:"A",require:"^attTab",link:function(scope,elm){scope.$watch("headingElement",function(heading){heading&&(elm.html(""),elm.append(heading))})}}}]).directive("tabContentTransclude",function(){function isTabHeading(node){return node.tagName&&(node.hasAttribute("tab-heading")||node.hasAttribute("data-tab-heading")||"tab-heading"===node.tagName.toLowerCase()||"data-tab-heading"===node.tagName.toLowerCase())}return{restrict:"A",require:"^attTabset",link:function(scope,elm,attrs){var tab=scope.$eval(attrs.tabContentTransclude);tab.$transcludeFn(tab.$parent,function(contents){angular.forEach(contents,function(node){isTabHeading(node)?tab.headingElement=node:elm.append(node)})})}}}),angular.module("connectedCarSDK.attTabset",[]).controller("TabsetController",["$scope",function($scope){var ctrl=this,tabs=ctrl.tabs=$scope.tabs=[];ctrl.select=function(selectedTab){angular.forEach(tabs,function(tab){tab.active&&tab!==selectedTab&&(tab.active=!1,tab.onDeselect())}),selectedTab.active=!0,selectedTab.onSelect()},ctrl.addTab=function(tab){tabs.push(tab),1===tabs.length?tab.active=!0:tab.active&&ctrl.select(tab)},ctrl.removeTab=function(tab){var index=tabs.indexOf(tab);if(tab.active&&tabs.length>1){var newActiveIndex=index==tabs.length-1?index-1:index+1;ctrl.select(tabs[newActiveIndex])}tabs.splice(index,1)}}]).directive("attTabset",function(){return{restrict:"EA",transclude:!0,replace:!0,scope:{type:"@"},controller:"TabsetController",templateUrl:"templates/tabs/attTabset.html",link:function(scope,element,attrs){scope.vertical=angular.isDefined(attrs.vertical)?scope.$parent.$eval(attrs.vertical):!1,scope.justified=angular.isDefined(attrs.justified)?scope.$parent.$eval(attrs.justified):!1,scope.topPosition=angular.isDefined(attrs.topPosition)?scope.$parent.$eval(attrs.topPosition):!1}}}),angular.module("connectedCarSDK.attToggleSwitch",[]).directive("attToggleSwitch",function(){return{templateUrl:"templates/attToggleSwitch.html",restrict:"E",scope:{ngModel:"="},require:"^ngModel",link:function(scope,element,attrs){angular.isDefined(attrs.disabled)&&element.find("label").attr("disabled","disabled"),scope.change=function(enabled){scope.ngModel=enabled}}}}),angular.module("connectedCarSDK.tpls",["templates/attAlert.html","templates/attBadge.html","templates/attDrawer.html","templates/attDropdown.html","templates/attHeader.html","templates/attListView.html","templates/attLoader.html","templates/attMenu.html","templates/attProgressBar.html","templates/attSlider.html","templates/attToggleSwitch.html","templates/carousel/carousel.html","templates/carousel/slide.html","templates/modal/backdrop.html","templates/modal/window.html","templates/tabs/attTab.html","templates/tabs/attTabset.html"]),angular.module("templates/attAlert.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attAlert.html",'<div class="att-alert" ng-class="type && \'alert-\' + type" ng-hide="closeAlert" ng-click="close()">\n    <div class="content">\n        <h1 class="alert-heading" ng-bind="title"></h1>\n        <p class="alert-text" ng-transclude></p>\n    </div>\n    <div class="alert-button">\n        <div class="btn btn-default" ng-show="showConfirmationBtn" ng-click="onClick()">{{buttonText}}</div>\n    </div>\n    <span class="alert-icon {{type}}" ng-show="showIcon && !showConfirmationBtn">\n        <i class="fa fa-info-circle"></i>\n    </span>\n</div>')}]),angular.module("templates/attBadge.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attBadge.html",'<span class="att-badge badge-{{badgeType}}">\n    {{value}}\n</span>')}]),angular.module("templates/attDrawer.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attDrawer.html",'<div class="att-drawer" ng-class="{ visible: showDrawer == true, invisible: showDrawer == false}">\n    <div ng-transclude></div>\n    <div class="close-area" ng-click="closeDrawer()"></div>\n</div>\n')}]),angular.module("templates/attDropdown.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attDropdown.html",'<div class="att-dropdown">\n    <a class="selected" ng-bind="defaultOption" ng-click="show=!show"></a>\n    <span class="icon"><i class="fa fa-caret-down"></i></span>\n    <div class="screen" ng-show="show">\n        <button ng-show="closeButton" type="button" class="btn btn-circ medium btn-close-list" ng-click="show=false">X</button>\n        <ul class="list">\n            <li ng-repeat="item in items" ng-click="selectItem(item)">{{item.text}}</li>\n\n        </ul>\n    </div>\n</div>\n')}]),angular.module("templates/attHeader.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attHeader.html",'<div class="att-header">\n    <h3 class="active-screen"><i id="menu-icon" class="fa fa-bars separate-right-10" ng-click="openMenu()"></i>{{currentItem}}</h3>\n    <div class="app-branding">\n        <span class="app-name" ng-bind="appName"></span>\n        <img class="app-icon" ng-src="{{appImage}}">\n    </div>\n</div>\n')}]),angular.module("templates/attListView.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attListView.html",'<div class="att-list-view">\n    <h3 class="active-screen" ng-bind="title"></h3>\n    <ul class="list">\n        <li ng-repeat="item in items"\n            ng-class="{active: item.selected}"\n            ng-click="onItemClick(item)">\n            {{item.text}}\n            <span ng-bind="item.desc"></span>\n        </li>\n    </ul>\n</div>')}]),angular.module("templates/attLoader.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attLoader.html",'<div class="loader" style="display:none">Loading...</div>\n')}]),angular.module("templates/attMenu.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attMenu.html",'<div class="att-menu">\n    <h3 class="active-screen" ng-bind="title"></h3>\n    <ul class="list">\n        <li ng-repeat="item in items"\n            ng-class="{active: item.selected}"\n            ng-click="onItemClick(item)">\n            <a ng-href="{{item.href}}">{{item.text}}\n            <span ng-bind="item.desc"></span>\n            </a>\n        </li>\n    </ul>\n</div>\n')}]),angular.module("templates/attProgressBar.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attProgressBar.html",'<div class="att-progress-bar">\n  <div class="progress-bar" ng-class="type && \'progress-bar-\' + type" role="progressbar" aria-valuenow="{{value}}" aria-valuemin="{{min}}" aria-valuemax="{{max}}" ng-style="{width: percent + \'%\'}" aria-valuetext="{{percent | number:0}}%">\n     <span class="label">{{textLeft}}</span>\n  </div>\n    <span class="value">{{textRight}}</span>\n</div>')}]),angular.module("templates/attSlider.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attSlider.html",'<div class="range-slider">\n    <span class="value-left">{{textLeft}}</span>\n    <span class="value-right">{{textRight}}</span>\n    <input class="input-range input-range-{{type}}" type="range" ng-model="ngModel" min="{{min}}" max="{{max}}">\n</div> ')}]),angular.module("templates/attToggleSwitch.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/attToggleSwitch.html",'<div class="att-toggle-switch" >\n    <div ng-class="{on: ngModel == true , off: ngModel == false}">\n        <div class="btn-group">\n            <label class="btn btn-primary" ng-model="ngModel" ng-click="change(false)" btn-radio="OFF">OFF</label>\n            <label class="btn btn-primary" ng-model="ngModel" ng-click="change(true)" btn-radio="ON">ON</label>            \n        </div>\n    </div>\n</div>')}]),angular.module("templates/carousel/carousel.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/carousel/carousel.html",'<div class="att-carousel">\n    <div ng-mouseenter="pause()" ng-mouseleave="play()" class="carousel" ng-swipe-right="prev()" ng-swipe-left="next()">\n        <ol class="carousel-indicators" ng-show="slides.length > 1">\n            <li ng-repeat="slide in slides track by $index" ng-class="{active: isActive(slide)}" ng-click="select(slide)"></li>\n        </ol>\n        <div class="carousel-inner" ng-transclude></div>\n        <a class="left carousel-control" ng-click="prev()" ng-show="slides.length > 1"><span class="fa fa-chevron-left"></span></a>\n        <a class="right carousel-control" ng-click="next()" ng-show="slides.length > 1"><span class="fa fa-chevron-right"></span></a>\n    </div>\n</div>')}]),angular.module("templates/carousel/slide.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/carousel/slide.html","<div ng-class=\"{\n    'active': leaving || (active && !entering),\n    'prev': (next || active) && direction=='prev',\n    'next': (next || active) && direction=='next',\n    'right': direction=='prev',\n    'left': direction=='next'\n  }\" class=\"item text-center\" ng-transclude></div>")}]),angular.module("templates/modal/backdrop.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/modal/backdrop.html",'<div class="modal-backdrop fade {{ backdropClass }}"\n    ng-class="{in: animate}"\n    ng-style="{\'z-index\': 1040 + (index && 1 || 0) + index*10}">\n</div>\n')}]),angular.module("templates/modal/window.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/modal/window.html",'<div tabindex="-1" role="dialog" class="modal fade" ng-class="{in: animate}" ng-style="{\'z-index\': 1050 + index*10, display: \'block\'}" ng-click="close($event)">\n    <div class="modal-dialog" ng-class="{\'modal-sm\': size == \'sm\', \'modal-lg\': size == \'lg\'}">\n        <div class="att-modal">\n            <div class="modal-content" modal-transclude></div>\n        </div>\n    </div>\n</div>\n')}]),angular.module("templates/tabs/attTab.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/tabs/attTab.html",'<li ng-class="{active: active, disabled: disabled}">\n    <a ng-click="select()" tab-heading-transclude>{{heading}}</a>\n</li>\n')
}]),angular.module("templates/tabs/attTabset.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("templates/tabs/attTabset.html",'<div class="att-tabs">\n    <div class="tab-content" ng-class="{\'nav-stacked\': vertical, \'top\': topPosition}">\n        <div class="tab-pane"\n             ng-repeat="tab in tabs"\n             ng-class="{active: tab.active}"\n             tab-content-transclude="tab">\n        </div>\n    </div>\n    <ul class="nav" ng-class="{\'nav-stacked\': vertical, \'top\': topPosition}" ng-transclude></ul>\n    <span id="justify"></span> <!-- Important for alignment - do not remove -->\n</div>\n')}]);